{"ast":null,"code":"import _classCallCheck from \"/Users/albertson/OneDrive - Washington University in St. Louis/CS204/09-todo-react-juliuscaesarson/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/albertson/OneDrive - Washington University in St. Louis/CS204/09-todo-react-juliuscaesarson/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/albertson/OneDrive - Washington University in St. Louis/CS204/09-todo-react-juliuscaesarson/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/albertson/OneDrive - Washington University in St. Louis/CS204/09-todo-react-juliuscaesarson/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/albertson/OneDrive - Washington University in St. Louis/CS204/09-todo-react-juliuscaesarson/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/albertson/OneDrive - Washington University in St. Louis/CS204/09-todo-react-juliuscaesarson/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\nvar apiKey = \"7bb18b-b475a9-ca1a2f-812109-55f3c2\";\nvar api = \"https://cse204.work/todos\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleComplete = function (id) {\n      _this.setState({\n        todos: _this.state.todos.map(function (todo) {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n            var xhttp = new XMLHttpRequest();\n            var data = {\n              completed: todo.completed\n            }; // Send the request to API\n\n            xhttp.onreadystatechange = function () {\n              if (this.readyState === 4 && this.status === 200) {}\n            };\n\n            xhttp.open(\"PUT\", api + \"/\" + id, true);\n            xhttp.setRequestHeader(\"x-api-key\", apiKey);\n            xhttp.send(JSON.stringify(data));\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    _this.handleSort = function (e) {\n      var todoList = _this.state.todos;\n\n      if (e.target.value === \"Created\") {\n        todoList = todoList.sort(function (a, b) {\n          return a.created - b.created;\n        });\n\n        _this.setState({\n          todos: todoList\n        });\n      } else if (e.target.value === \"Completed\") {\n        todoList = todoList.sort(function (a, b) {\n          return a.completed - b.completed;\n        });\n\n        _this.setState({\n          todos: todoList\n        });\n      } else {\n        _this.renderToDo();\n      }\n    };\n\n    _this.handleAddEvent = function (e) {\n      if (document.getElementById(\"todo-task-input\").value === null || document.getElementById(\"todo-task-input\").value === \"\") {\n        alert(\"Please input an event\");\n      } else {\n        // If the value of input was not null or \"\" then take the input and add \n        // the inputted string into the database of the API\n        var xhttp = new XMLHttpRequest();\n        var newTodo = document.getElementById(\"todo-task-input\").value;\n        var data = {\n          text: newTodo\n        };\n        xhttp.open(\"POST\", api, false);\n        xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n        xhttp.setRequestHeader(\"x-api-key\", apiKey);\n        xhttp.send(JSON.stringify(data));\n\n        xhttp.onreadystatechange = function () {\n          if (this.readyState === 4 && this.status === 200) {// var todo = JSON.parse(this.responseText);\n          } else if (this.readyState === 4) {// console.log(this.responseText);\n          }\n        };\n\n        document.getElementById(\"todo-task-input\").value = \"\"; // var created = new Date();\n        // created = (created.getTime()/1000).toFixed(0);\n        // var item = {\n        //   completed: false,\n        //   created: created,\n        //   id: \"0\",\n        //   text: newTodo,\n        //   updated: created,\n        //   user: \"8c86ed60197c61b5ca7df09c803f1dc8852261122d7c95c1ec939232f2066244\"\n        // };\n        // this.state.todos.push(item);\n        // this.setState({\n        //   todos: this.state.todos.map((todo) => {\n        //     return todo;\n        //   })\n        // });\n\n        _this.renderToDo();\n      }\n    };\n\n    _this.handleDelete = function (id) {\n      // this.setState({\n      //   todos: this.state.todos.map((todo) => {\n      //     if (todo.id === id) {\n      //       var xhttp = new XMLHttpRequest();\n      //       // Send the request to API\n      //       xhttp.onreadystatechange = function () {\n      //         if (this.readyState === 4 && this.status === 200) {\n      //         }\n      //       }\n      //       xhttp.open(\"DELETE\", api + \"/\" + id, true);\n      //       xhttp.setRequestHeader(\"x-api-key\", apiKey);\n      //       xhttp.send();\n      //     } else {\n      //       return;\n      //     }\n      //     return todo;\n      //   })\n      // });\n      var xhttp = new XMLHttpRequest(); // Request to API to delete the item\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {// console.log(\"success\");\n        }\n      };\n\n      xhttp.open(\"DELETE\", api + \"/\" + id, false);\n      xhttp.setRequestHeader(\"x-api-key\", apiKey);\n      xhttp.send();\n\n      _this.renderToDo();\n    };\n\n    _this.state = {\n      todos: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"fixed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"todo\",\n        id: \"todo-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Nikash's ToDo App\"), React.createElement(NewTodo, {\n        div_id: \"todo-new-task\",\n        input_id: \"todo-task-input\",\n        button_id: \"todo-btn\",\n        handleAddEvent: this.handleAddEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"todo\",\n        id: \"todo-sort-by\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Sort by:\"), React.createElement(\"select\", {\n        id: \"todo-sort-by\",\n        onChange: this.handleSort.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        id: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Default\"), React.createElement(\"option\", {\n        id: \"created\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Created\"), React.createElement(\"option\", {\n        id: \"completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Completed\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"todo\",\n        id: \"todo-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"todo-list\",\n        id: \"todo-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Todo, {\n        todos: this.state.todos,\n        handleComplete: this.handleComplete,\n        handleDelete: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.renderToDo();\n    }\n  }, {\n    key: \"renderToDo\",\n    value: function renderToDo() {\n      var xhttp = new XMLHttpRequest();\n      var todoList = [];\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          // Convert response to JSON\n          todoList = JSON.parse(this.responseText);\n        }\n      };\n\n      xhttp.open(\"GET\", api, false);\n      xhttp.setRequestHeader(\"x-api-key\", apiKey);\n      xhttp.send();\n      console.log(todoList);\n      this.setState({\n        todos: todoList\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/albertson/OneDrive - Washington University in St. Louis/CS204/09-todo-react-juliuscaesarson/src/App.js"],"names":["React","Component","Todo","NewTodo","apiKey","api","App","props","handleComplete","id","setState","todos","state","map","todo","completed","xhttp","XMLHttpRequest","data","onreadystatechange","readyState","status","open","setRequestHeader","send","JSON","stringify","handleSort","e","todoList","target","value","sort","a","b","created","renderToDo","handleAddEvent","document","getElementById","alert","newTodo","text","handleDelete","bind","parse","responseText","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\nvar apiKey = \"7bb18b-b475a9-ca1a2f-812109-55f3c2\";\nvar api = \"https://cse204.work/todos\";\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      todos: []\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App content\">\n        <div className=\"fixed\">\n          <div className=\"todo\" id=\"todo-name\">Nikash's ToDo App</div>\n          <NewTodo div_id=\"todo-new-task\" input_id=\"todo-task-input\" button_id=\"todo-btn\" handleAddEvent={this.handleAddEvent} />\n          <div className=\"todo\" id=\"todo-sort-by\">\n            <p>Sort by:</p>\n            <select id=\"todo-sort-by\" onChange={this.handleSort.bind(this)}>\n              <option id=\"default\">Default</option>\n              <option id=\"created\">Created</option>\n              <option id=\"completed\">Completed</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div className=\"todo\" id=\"todo-div\">\n            <div className=\"todo-list\" id=\"todo-list\">\n              <Todo todos={this.state.todos} handleComplete={this.handleComplete} handleDelete={this.handleDelete} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentWillMount() {\n    this.renderToDo();\n  }\n\n  renderToDo() {\n    var xhttp = new XMLHttpRequest()\n    var todoList = [];\n\n    xhttp.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // Convert response to JSON\n        todoList = JSON.parse(this.responseText);\n      }\n    }\n    xhttp.open(\"GET\", api, false);\n    xhttp.setRequestHeader(\"x-api-key\", apiKey);\n    xhttp.send();\n    console.log(todoList);\n    this.setState({ todos: todoList });\n  }\n\n  handleComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n          var xhttp = new XMLHttpRequest();\n\n          var data = {\n            completed: todo.completed\n          };\n\n          // Send the request to API\n          xhttp.onreadystatechange = function () {\n            if (this.readyState === 4 && this.status === 200) {\n            }\n          }\n          xhttp.open(\"PUT\", api + \"/\" + id, true);\n          xhttp.setRequestHeader(\"x-api-key\", apiKey);\n          xhttp.send(JSON.stringify(data));\n        }\n        return todo;\n      })\n    });\n  }\n\n  handleSort = (e) => {\n    var todoList = this.state.todos;\n    if (e.target.value === \"Created\") {\n      todoList = todoList.sort(function (a, b) {\n        return a.created - b.created;\n      });\n      this.setState({ todos: todoList });\n    } else if (e.target.value === \"Completed\") {\n      todoList = todoList.sort(function (a, b) {\n        return a.completed - b.completed;\n      });\n      this.setState({ todos: todoList });\n    } else {\n      this.renderToDo();\n    }\n  }\n\n  handleAddEvent = (e) => {\n    if (document.getElementById(\"todo-task-input\").value === null || document.getElementById(\"todo-task-input\").value === \"\") {\n      alert(\"Please input an event\");\n    } else {\n      // If the value of input was not null or \"\" then take the input and add \n      // the inputted string into the database of the API\n      var xhttp = new XMLHttpRequest();\n      var newTodo = document.getElementById(\"todo-task-input\").value;\n\n      var data = {\n        text: newTodo\n      };\n\n      xhttp.open(\"POST\", api, false);\n      xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n      xhttp.setRequestHeader(\"x-api-key\", apiKey);\n      xhttp.send(JSON.stringify(data));\n\n      xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          // var todo = JSON.parse(this.responseText);\n        } else if (this.readyState === 4) {\n          // console.log(this.responseText);\n        }\n      };\n\n      document.getElementById(\"todo-task-input\").value = \"\";\n\n      // var created = new Date();\n      // created = (created.getTime()/1000).toFixed(0);\n      // var item = {\n      //   completed: false,\n      //   created: created,\n      //   id: \"0\",\n      //   text: newTodo,\n      //   updated: created,\n      //   user: \"8c86ed60197c61b5ca7df09c803f1dc8852261122d7c95c1ec939232f2066244\"\n      // };\n\n      // this.state.todos.push(item);\n      // this.setState({\n      //   todos: this.state.todos.map((todo) => {\n      //     return todo;\n      //   })\n      // });\n\n      this.renderToDo();\n    }\n  }\n\n  handleDelete = (id) => {\n    // this.setState({\n    //   todos: this.state.todos.map((todo) => {\n    //     if (todo.id === id) {\n    //       var xhttp = new XMLHttpRequest();\n\n    //       // Send the request to API\n    //       xhttp.onreadystatechange = function () {\n    //         if (this.readyState === 4 && this.status === 200) {\n    //         }\n    //       }\n    //       xhttp.open(\"DELETE\", api + \"/\" + id, true);\n    //       xhttp.setRequestHeader(\"x-api-key\", apiKey);\n    //       xhttp.send();\n    //     } else {\n    //       return;\n    //     }\n    //     return todo;\n    //   })\n    // });\n    var xhttp = new XMLHttpRequest();\n\n    // Request to API to delete the item\n    xhttp.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // console.log(\"success\");\n      }\n    }\n\n    xhttp.open(\"DELETE\", api + \"/\" + id, false);\n    xhttp.setRequestHeader(\"x-api-key\", apiKey);\n    xhttp.send();\n\n    this.renderToDo();\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}